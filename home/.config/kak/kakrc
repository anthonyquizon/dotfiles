set global ui_options ncurses_assistant=none

set-face global DiagnosticError red
set-face global DiagnosticWarning yellow

hook global InsertChar k %{ try %{
  exec -draft hH <a-k>jk<ret> d
  exec <esc>
}}

hook global InsertChar \t %{ exec -draft -itersel h@ }
set global tabstop 2
set global indentwidth 2

def find -params 1 -shell-candidates %{ find -type f } %{ edit %arg{1} }
def git-edit -params 1 -shell-candidates %{ git ls-files } %{ edit %arg{1} }

def -docstring 'invoke fzf to open a git file' \
  fzf-file %{ %sh{
    if [ -z "$TMUX" ]; then
      echo echo only works inside tmux
    else
      ROOT=$(git rev-parse --show-toplevel)
      FILE=$(git ls-files $ROOT | fzf-tmux -d 15)
      if [ -n "$FILE" ]; then
        printf 'eval -client %%{%s} edit %%{%s}\n' "${kak_client}" "${FILE}" | kak -p "${kak_session}"
      fi
    fi
} }

def -docstring 'invoke fzf to select a buffer' \
  fzf-buffer %{ %sh{
    if [ -z "$TMUX" ]; then
      echo echo only works inside tmux
    else
      BUFFER=$(printf %s\\n "${kak_buflist}" | tr : '\n' | fzf-tmux -d 15)
      if [ -n "$BUFFER" ]; then
        echo "eval -client '$kak_client' 'buffer ${BUFFER}'" | kak -p ${kak_session}
      fi
    fi
} }

map global user r ':suspend "ranger --choosefiles=/tmp/ranger-files &&fg;history -d $(history 1)" ranger<ret>'

map global user <space> ':fzf-file<ret>'
map global user b ':fzf-buffer<ret>'
map global normal <space> , -docstring 'leader'
map global normal <backspace> <space> -docstring 'remove all sels except main'
map global normal <a-backspace> <a-space> -docstring 'remove main sel'

%sh{kak-lsp --kakoune -s $kak_session}
lsp-start
lsp-auto-hover-enable
add-highlighter global number_lines -relative -hlcursor

