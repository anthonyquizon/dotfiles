if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'anthonyquizon/agda-vim'
Plug 'luochen1990/rainbow'
Plug 'nanotech/jellybeans.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'sheerun/vim-polyglot'
Plug 'kovisoft/paredit'
Plug 'w0rp/ale'
Plug 'skywind3000/asyncrun.vim'
Plug 'chrisbra/unicode.vim'
Plug 'bohlender/vim-smt2'
Plug 'mattn/emmet-vim'
call plug#end()


inoremap jk <esc>
filetype indent plugin on
syntax on

set autoindent
set laststatus=2
set relativenumber
set nu
set nopaste
set nowrap
set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set nohlsearch
set smartcase
set cursorline
set noswapfile
set undofile
set undodir=~/.vim/undodir
set nobackup
set backspace=indent,eol,start
set hlsearch

colorscheme jellybeans

let mapleader = "\<Space>"
let maplocalleader = ","


vmap <silent> <leader>y y:new<CR>:call setline(1,getregtype())<CR>o<Esc>P:wq! ~/.vim/reg<CR>
nmap <silent> <leader>y :new<CR>:call setline(1,getregtype())<CR>o<Esc>P:wq! ~/.vim/reg<CR>
map <silent> <leader>p :sview ~/.vim/reg<CR>"zdddG:q!<CR>:call setreg('"', @", @z)<CR>p
map <silent> <leader>P :sview ~/.vim/reg<CR>"zdddG:q!<CR>:call setreg('"', @", @z)<CR>P

" disable lower case mapping
xnoremap u <nop>
xnoremap K <nop>

" ===== Search and Replace =====
vnoremap <leader>s "vy :%s/<C-R>v//g<Left><Left>
nnoremap <leader>s :%sno/<C-R><C-W>//g<Left><Left>
nnoremap <leader>S :%s/<C-R><C-W>//g<Left><Left>

" === Search Highlight ===
nnoremap <leader>l :noh<CR>

" ===== NETRW ======
let g:netrw_banner = 0
let g:netrw_localrmdir='rm -r'
let g:netrw_list_hide= '.*\.swp$,.stack-work,elm-stuff,dist-newstyle,.ghc*,.*\.go,.*\.agdai,.*\.agda.vim'
"==================

"stay selected when visual mode indenting
vmap < <gv
vmap > >gv

" Force override ambiguous commands (eg. elm-make)
command! E Explore
command! Qa qa
command! WQ wq
command! Wq wq
command! W w
command! Q q
nnoremap Q <nop>

" Reference: http://www.alecjacobson.com/weblog/?p=443
" Enter Digraph
inoremap <C-o> <C-k>

" shuffle line one up or down
nnoremap <C-j> :m .+1<CR>==
nnoremap <C-k> :m .-2<CR>==
inoremap <C-j> <Esc>:m .+1<CR>==gi
inoremap <C-k> <Esc>:m .-2<CR>==gi
vnoremap <C-j> :m '>+1<CR>gv=gv
vnoremap <C-k> :m '<-2<CR>gv=gv


"===== FZF ======
command! -bang -nargs=* Rg call fzf#vim#grep("rg --column --line-number --no-heading --color=always --smart-case ".shellescape(<q-args>), 1, {'options': '--delimiter : --nth 4..'}, <bang>0)
command! CustomGitFiles call fzf#run(fzf#wrap({
      \ 'source': 'git ls-files --exclude-standard --cached --others'
      \ }))

command! Directories call fzf#run(fzf#wrap({
      \ 'source': 'find . -type d -not -path *.git*'
      \ }))

noremap <silent> <leader>/ :Rg<CR>
noremap <leader><leader> :CustomGitFiles<CR>
noremap <leader>b :Buffers<CR>
noremap <leader>d :Directories<CR>
noremap <leader>` :set number! relativenumber!<CR>
noremap ` :set relativenumber!<CR>

"======= Rainbow Parens =======
let g:rainbow_active = 1
let g:rainbow_conf = {
            \   'guifgs': ['royalblue3', 'darkorange3', 'seagreen3', 'firebrick'],
            \   'ctermfgs': ['darkblue', 'darkgreen', 'darkcyan', 'darkmagenta'],
            \   'operators': '_,_',
            \   'parentheses': ['start=/(/ end=/)/ fold', 'start=/\[/ end=/\]/ fold', 'start=/{/ end=/}/ fold'],
            \   'separately': {
            \       '*': {},
            \       'tex': {
            \           'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/'],
            \       },
            \       'vim': {
            \           'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/', 'start=/{/ end=/}/ fold', 'start=/(/ end=/)/ containedin=vimFuncBody', 'start=/\[/ end=/\]/ containedin=vimFuncBody', 'start=/{/ end=/}/ fold containedin=vimFuncBody'],
            \       },
            \       'html': {
            \           'parentheses': ['start=/\v\<((area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)[ >])@!\z([-_:a-zA-Z0-9]+)(\s+[-_:a-zA-Z0-9]+(\=("[^"]*"|'."'".'[^'."'".']*'."'".'|[^ '."'".'"><=`]*))?)*\>/ end=#</\z1># fold'],
            \       },
            \       'css': 0,
            \   }
            \}

" ==== NERD Commenter ===
noremap <leader>; :call NERDComment(1, 'toggle')<CR>

" === ALE ====
nmap <silent> <leader>n :ALENextWrap<cr>
nmap <silent> <leader>N :ALEPreviousWrap<cr>

" === JSON ====
noremap <leader>json :%!python3 -m json.tool<CR>

" ==== Paredit =====
 au FileType smt2 call PareditInitBuffer()
